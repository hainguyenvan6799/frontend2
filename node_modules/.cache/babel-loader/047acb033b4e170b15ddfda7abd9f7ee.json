{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects_User\\\\lucky\\\\full_project\\\\frontend\\\\src\\\\components\\\\page\\\\Admin\\\\PhanQuyen\\\\ThemVaiTroNguoiDung.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport autocomplete from 'autocompleter';\nimport './autocomplete.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ThemVaiTroNguoiDung(props) {\n  _s();\n\n  // const [phanquyen, setPhanQuyen] = React.useState({\n  //     'mauser': \"\",\n  //     'role_id': \"\",\n  // })\n  const [mauser, setMaUser] = React.useState(\"\");\n  const [roleID, setRoleID] = React.useState(\"\");\n  React.useEffect(() => {\n    const {\n      users,\n      roles\n    } = props;\n    const datas1 = users.map(item => {\n      return {\n        label: `${item.name} - ${item.code}`,\n        value: item.mauser\n      };\n    });\n    const datas2 = roles.map(item => {\n      return {\n        label: `${item.role_name}`,\n        value: item.role_id\n      };\n    });\n    console.log(datas1);\n    console.log(datas2);\n    var input1 = document.getElementById('nguoidung');\n    var input2 = document.getElementById('role');\n    autocomplete({\n      input: input1,\n      fetch: function (text, update) {\n        text = text.toLowerCase();\n        console.log(text);\n        console.log(\"abc\"); // you can also use AJAX requests instead of preloaded data\n\n        var suggestions = datas1.filter(n => n.label.toLowerCase().includes(text));\n        update(suggestions);\n      },\n      onSelect: function (item) {\n        let test = input1.value = item.label;\n        setMaUser(item.value);\n      }\n    });\n    autocomplete({\n      input: input2,\n      fetch: function (text, update) {\n        text = text.toLowerCase();\n        console.log(text);\n        console.log(\"acb\"); // you can also use AJAX requests instead of preloaded data\n\n        var suggestions = datas2.filter(n => n.label.toLowerCase().includes(text));\n        update(suggestions);\n      },\n      onSelect: function (item) {\n        let test = input2.value = item.label;\n        setRoleID(item.value);\n      }\n    });\n    return () => {};\n  }, []);\n\n  const handleClick = e => {\n    e.preventDefault();\n    const data = {\n      'mauser': mauser,\n      'role_id': roleID\n    };\n    props.create(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nguoidung\",\n          children: \"Nh\\u1EADp t\\xEAn ng\\u01B0\\u1EDDi d\\xF9ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nguoidung\",\n          className: \"form-control\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"role\",\n          children: \"Nh\\u1EADp t\\xEAn vai tr\\xF2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"role\",\n          className: \"form-control\",\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Nh\\u1EA5n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ThemVaiTroNguoiDung, \"cSRnZToQR8FNDXDV1VK/qzOHFw4=\");\n\n_c = ThemVaiTroNguoiDung;\nexport default ThemVaiTroNguoiDung;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemVaiTroNguoiDung\");","map":{"version":3,"sources":["C:/Projects_User/lucky/full_project/frontend/src/components/page/Admin/PhanQuyen/ThemVaiTroNguoiDung.js"],"names":["React","autocomplete","ThemVaiTroNguoiDung","props","mauser","setMaUser","useState","roleID","setRoleID","useEffect","users","roles","datas1","map","item","label","name","code","value","datas2","role_name","role_id","console","log","input1","document","getElementById","input2","input","fetch","text","update","toLowerCase","suggestions","filter","n","includes","onSelect","test","handleClick","e","preventDefault","data","create"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport autocomplete from 'autocompleter';\r\nimport './autocomplete.css';\r\n\r\nfunction ThemVaiTroNguoiDung(props) {\r\n    // const [phanquyen, setPhanQuyen] = React.useState({\r\n    //     'mauser': \"\",\r\n    //     'role_id': \"\",\r\n    // })\r\n    const [mauser, setMaUser] = React.useState(\"\");\r\n    const [roleID, setRoleID] = React.useState(\"\");\r\n\r\n    React.useEffect(() => {\r\n        const { users, roles } = props;\r\n\r\n        const datas1 = users.map(item => {\r\n            return {\r\n                label: `${item.name} - ${item.code}`,\r\n                value: item.mauser,\r\n            }\r\n        })\r\n\r\n        const datas2 = roles.map(item => {\r\n            return {\r\n                label: `${item.role_name}`,\r\n                value: item.role_id,\r\n            }\r\n        })\r\n\r\n        console.log(datas1)\r\n        console.log(datas2)\r\n\r\n        var input1 = document.getElementById('nguoidung');\r\n        var input2 = document.getElementById('role');\r\n\r\n        autocomplete({\r\n            input: input1,\r\n            fetch: function (text, update) {\r\n                text = text.toLowerCase();\r\n                console.log(text)\r\n                console.log(\"abc\")\r\n                // you can also use AJAX requests instead of preloaded data\r\n                var suggestions = datas1.filter(n => n.label.toLowerCase().includes(text))\r\n                update(suggestions);\r\n            },\r\n            onSelect: function (item) {\r\n                let test = input1.value = item.label;\r\n                setMaUser(item.value)\r\n            }\r\n        });\r\n\r\n        autocomplete({\r\n            input: input2,\r\n            fetch: function (text, update) {\r\n                text = text.toLowerCase();\r\n                console.log(text)\r\n                console.log(\"acb\")\r\n                // you can also use AJAX requests instead of preloaded data\r\n                var suggestions = datas2.filter(n => n.label.toLowerCase().includes(text))\r\n                update(suggestions);\r\n            },\r\n            onSelect: function (item) {\r\n                let test = input2.value = item.label;\r\n                setRoleID(item.value)\r\n            }\r\n        });\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        const data = {\r\n            'mauser': mauser,\r\n            'role_id': roleID,\r\n        }\r\n        props.create(data);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <br />\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"nguoidung\" >Nhập tên người dùng</label>\r\n                    <input type=\"text\" id=\"nguoidung\" className=\"form-control\" autoComplete=\"off\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"role\" >Nhập tên vai trò</label>\r\n                    <input type=\"text\" id=\"role\" className=\"form-control\" autoComplete=\"off\"/>\r\n                </div>\r\n                <button onClick={handleClick}>Nhấn</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ThemVaiTroNguoiDung\r\n"]},"metadata":{},"sourceType":"module"}