{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects_User\\\\lucky\\\\full_project\\\\frontend\\\\src\\\\components\\\\page\\\\Admin\\\\QuanLyTaiNguyen\\\\ChinhSuaTaiNguyen.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // import addictional libraries\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup'; // import CustomSelect from '../CustomSelect';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChinhSuaVaiTro(props) {\n  _s();\n\n  const item = props.location.state.item;\n  const {\n    handleUpdate\n  } = props;\n  const initialValues = {\n    resource_name: item.resource_name\n  };\n  const validationSchema = Yup.object({\n    resource_name: Yup.string().required(\"Resource name can not be empty\")\n  });\n\n  const onSubmit = async values => {\n    const {\n      resource_name\n    } = values;\n    handleUpdate({\n      resource_name,\n      resource_id: item.resource_id\n    });\n  };\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit\n  });\n  const {\n    handleChange,\n    handleSubmit,\n    handleBlur\n  } = formik;\n\n  const form_sua_tainguyen = () => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"resource_name\",\n          children: \"T\\xEAn t\\xE0i nguy\\xEAn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"resource_name\",\n          id: \"resource_name\",\n          className: \"form-control\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: formik.values.resource_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), formik.errors.resource_name ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: formik.errors.resource_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 53\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block mt-3\",\n        children: \"Ch\\u1EC9nh s\\u1EEDa t\\xE0i nguy\\xEAn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: form_sua_tainguyen()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChinhSuaVaiTro, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = ChinhSuaVaiTro;\nexport default ChinhSuaVaiTro;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChinhSuaVaiTro\");","map":{"version":3,"sources":["C:/Projects_User/lucky/full_project/frontend/src/components/page/Admin/QuanLyTaiNguyen/ChinhSuaTaiNguyen.js"],"names":["React","useFormik","Yup","ChinhSuaVaiTro","props","item","location","state","handleUpdate","initialValues","resource_name","validationSchema","object","string","required","onSubmit","values","resource_id","formik","handleChange","handleSubmit","handleBlur","form_sua_tainguyen","errors"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB,C,CACA;;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B,QAAMC,IAAI,GAAGD,KAAK,CAACE,QAAN,CAAeC,KAAf,CAAqBF,IAAlC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAmBJ,KAAzB;AAEA,QAAMK,aAAa,GAAG;AAClBC,IAAAA,aAAa,EAAEL,IAAI,CAACK;AADF,GAAtB;AAIA,QAAMC,gBAAgB,GAAGT,GAAG,CAACU,MAAJ,CAAW;AAChCF,IAAAA,aAAa,EAAER,GAAG,CAACW,MAAJ,GAAaC,QAAb,CAAsB,gCAAtB;AADiB,GAAX,CAAzB;;AAIA,QAAMC,QAAQ,GAAG,MAAOC,MAAP,IAAkB;AAC/B,UAAM;AAAEN,MAAAA;AAAF,QAAoBM,MAA1B;AACAR,IAAAA,YAAY,CAAC;AAAEE,MAAAA,aAAF;AAAiBO,MAAAA,WAAW,EAAEZ,IAAI,CAACY;AAAnC,KAAD,CAAZ;AACH,GAHD;;AAKA,QAAMC,MAAM,GAAGjB,SAAS,CAAC;AACrBQ,IAAAA,aADqB;AAErBE,IAAAA,gBAFqB;AAGrBI,IAAAA;AAHqB,GAAD,CAAxB;AAMA,QAAM;AAAEI,IAAAA,YAAF;AAAgBC,IAAAA,YAAhB;AAA8BC,IAAAA;AAA9B,MAA6CH,MAAnD;;AAEA,QAAMI,kBAAkB,GAAG,MAAM;AAC7B,wBACI;AAAM,MAAA,QAAQ,EAAEF,YAAhB;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,eAFT;AAGI,UAAA,EAAE,EAAC,eAHP;AAII,UAAA,SAAS,EAAC,cAJd;AAKI,UAAA,QAAQ,EAAED,YALd;AAMI,UAAA,MAAM,EAAEE,UANZ;AAOI,UAAA,KAAK,EAAEH,MAAM,CAACF,MAAP,CAAcN;AAPzB;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAWKQ,MAAM,CAACK,MAAP,CAAcb,aAAd,gBAA+B;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA,oBAA4BQ,MAAM,CAACK,MAAP,CAAcb;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAA/B,GAA+F,IAXpG;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAiBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,gCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsBH,GAvBD;;AAyBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACKY,kBAAkB;AADvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAvDQnB,c;UAiBUF,S;;;KAjBVE,c;AAyDT,eAAeA,cAAf","sourcesContent":["import React from 'react'\r\n\r\n// import addictional libraries\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\n// import CustomSelect from '../CustomSelect';\r\n\r\nfunction ChinhSuaVaiTro(props) {\r\n    const item = props.location.state.item;\r\n    const { handleUpdate } = props;\r\n\r\n    const initialValues = {\r\n        resource_name: item.resource_name,\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        resource_name: Yup.string().required(\"Resource name can not be empty\"),\r\n    });\r\n\r\n    const onSubmit = async (values) => {\r\n        const { resource_name } = values;\r\n        handleUpdate({ resource_name, resource_id: item.resource_id });\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema,\r\n        onSubmit,\r\n    })\r\n\r\n    const { handleChange, handleSubmit, handleBlur } = formik;\r\n\r\n    const form_sua_tainguyen = () => {\r\n        return (\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"resource_name\" >Tên tài nguyên</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"resource_name\"\r\n                        id=\"resource_name\"\r\n                        className=\"form-control\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={formik.values.resource_name}\r\n                    />\r\n                    {formik.errors.resource_name ? (<p className=\"text-danger\">{formik.errors.resource_name}</p>) : null}\r\n\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block mt-3\">Chỉnh sửa tài nguyên</button>\r\n            </form>\r\n\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {form_sua_tainguyen()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChinhSuaVaiTro\r\n"]},"metadata":{},"sourceType":"module"}