{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects_User\\\\lucky\\\\full_project\\\\frontend\\\\src\\\\components\\\\page\\\\Admin\\\\VaiTroTaiNguyen\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { history } from '../AdminOnly';\nimport api from '../../role_api';\nimport DanhSach from './DanhSach';\nimport Them from './Them';\nimport ChinhSua from './ChinhSua';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction VaiTroTaiNguyen() {\n  _s();\n\n  const isMountedVal = React.useRef(1);\n  const [roles_resources, setRolesResources] = React.useState([]);\n  const [resources, setResources] = React.useState([]);\n  const [roles, setRoles] = React.useState([]);\n\n  const get_role_name = (arr, checkRoleID) => {\n    const role = arr.find(({\n      role_id\n    }) => role_id === checkRoleID);\n    return role.role_name;\n  };\n\n  const get_resource_name = (arr, checkResourceID) => {\n    const resource = arr.find(({\n      resource_id\n    }) => resource_id === checkResourceID);\n    return resource.resource_name;\n  };\n\n  const get_roles_resources = async () => {\n    const response = await axios.get('/api/get-all-roles-resources');\n\n    if (response.data.status === true) {\n      const roles_resources = response.data.data;\n      const roles = response.data.roles;\n      const resources = response.data.resources;\n      const newdata = roles_resources.map(item => {\n        item.role_name = get_role_name(roles, item.role_id);\n        item.resource_name = get_resource_name(resources, item.resource_id);\n        return item;\n      });\n      setRolesResources(newdata);\n      setResources([...resources]);\n      setRoles([...roles]); // console.log(result.data.data)\n      // setRolesResources([...result.data.data]);\n      // setUsers([...result.data.users]);\n      // setRoles([...result.data.roles]);\n    }\n  };\n\n  const updateState = callback => {\n    if (isMountedVal.current === 1) {\n      callback();\n    }\n  };\n\n  const create = async item => {\n    const result = await api.post('/add-role-resource', item);\n\n    if (result.data.status === true) {\n      alert(result.data.message);\n    } else {\n      alert(result.data.message);\n    }\n\n    history.push('/admin/roles-resources');\n  };\n\n  const remove = async id => {\n    // axios delete\n    const result = await api.delete(`/delete-role-resource/${id}`);\n\n    if (result.data.status) {\n      const new_data = roles_resources.filter(item => item._id !== id);\n      ;\n      setRolesResources(new_data);\n    } else {\n      alert(result.data.message);\n    }\n\n    console.log(id);\n  };\n\n  const update = async item => {// const response = {}; //lấy dữ liệu trả về sau khi edit\n    // const { mauser } = response.data;;\n    // const new_data = users_roles.map((item) => {\n    //     return item.mauser !== mauser ? item : { ...response.data }\n    // })\n    // setUsersRoles(new_data);\n  };\n\n  React.useEffect(() => {\n    updateState(get_roles_resources);\n    isMountedVal.current = 0;\n    return () => {\n      isMountedVal.current = 0;\n    };\n  }, [isMountedVal]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/admin/roles-resources\",\n          children: /*#__PURE__*/_jsxDEV(DanhSach, {\n            roles_resources: roles_resources,\n            remove: remove // resources={setResources}\n            // roles={setRoles}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/admin/add-roles-resources\",\n          render: props => /*#__PURE__*/_jsxDEV(Them, { ...props,\n            resources: resources,\n            roles: roles,\n            create: create\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin/edit-roles-resources\",\n          render: props => /*#__PURE__*/_jsxDEV(ChinhSua, { ...props,\n            update: update\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VaiTroTaiNguyen, \"YPugpuByHlDzK090MjYbpdHPk0U=\");\n\n_c = VaiTroTaiNguyen;\nexport default VaiTroTaiNguyen;\n\nvar _c;\n\n$RefreshReg$(_c, \"VaiTroTaiNguyen\");","map":{"version":3,"sources":["C:/Projects_User/lucky/full_project/frontend/src/components/page/Admin/VaiTroTaiNguyen/index.js"],"names":["React","axios","BrowserRouter","Router","Switch","Route","Link","Redirect","history","api","DanhSach","Them","ChinhSua","Navbar","VaiTroTaiNguyen","isMountedVal","useRef","roles_resources","setRolesResources","useState","resources","setResources","roles","setRoles","get_role_name","arr","checkRoleID","role","find","role_id","role_name","get_resource_name","checkResourceID","resource","resource_id","resource_name","get_roles_resources","response","get","data","status","newdata","map","item","updateState","callback","current","create","result","post","alert","message","push","remove","id","delete","new_data","filter","_id","console","log","update","useEffect","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,EAAuDC,QAAvD,QAAuE,kBAAvE;AAEA,SAASC,OAAT,QAAwB,cAAxB;AAEA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,eAAT,GAA2B;AAAA;;AACvB,QAAMC,YAAY,GAAGf,KAAK,CAACgB,MAAN,CAAa,CAAb,CAArB;AAEA,QAAM,CAACC,eAAD,EAAkBC,iBAAlB,IAAuClB,KAAK,CAACmB,QAAN,CAAe,EAAf,CAA7C;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BrB,KAAK,CAACmB,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBvB,KAAK,CAACmB,QAAN,CAAe,EAAf,CAA1B;;AAEA,QAAMK,aAAa,GAAG,CAACC,GAAD,EAAMC,WAAN,KAAsB;AACxC,UAAMC,IAAI,GAAGF,GAAG,CAACG,IAAJ,CAAS,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAiBA,OAAO,KAAKH,WAAtC,CAAb;AACA,WAAOC,IAAI,CAACG,SAAZ;AACH,GAHD;;AAKA,QAAMC,iBAAiB,GAAG,CAACN,GAAD,EAAMO,eAAN,KAA0B;AAChD,UAAMC,QAAQ,GAAGR,GAAG,CAACG,IAAJ,CAAS,CAAC;AAAEM,MAAAA;AAAF,KAAD,KAAqBA,WAAW,KAAKF,eAA9C,CAAjB;AACA,WAAOC,QAAQ,CAACE,aAAhB;AACH,GAHD;;AAKA,QAAMC,mBAAmB,GAAG,YAAY;AACpC,UAAMC,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,GAAN,CAAU,8BAAV,CAAvB;;AACA,QAAID,QAAQ,CAACE,IAAT,CAAcC,MAAd,KAAyB,IAA7B,EAAmC;AAE/B,YAAMvB,eAAe,GAAGoB,QAAQ,CAACE,IAAT,CAAcA,IAAtC;AACA,YAAMjB,KAAK,GAAGe,QAAQ,CAACE,IAAT,CAAcjB,KAA5B;AACA,YAAMF,SAAS,GAAGiB,QAAQ,CAACE,IAAT,CAAcnB,SAAhC;AAEA,YAAMqB,OAAO,GAAGxB,eAAe,CAACyB,GAAhB,CAAoBC,IAAI,IAAI;AACxCA,QAAAA,IAAI,CAACb,SAAL,GAAiBN,aAAa,CAACF,KAAD,EAAQqB,IAAI,CAACd,OAAb,CAA9B;AACAc,QAAAA,IAAI,CAACR,aAAL,GAAqBJ,iBAAiB,CAACX,SAAD,EAAYuB,IAAI,CAACT,WAAjB,CAAtC;AAEA,eAAOS,IAAP;AACH,OALe,CAAhB;AAMAzB,MAAAA,iBAAiB,CAACuB,OAAD,CAAjB;AACApB,MAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,CAAD,CAAZ;AACAG,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR,CAd+B,CAe/B;AACA;AACA;AACA;AACH;AACJ,GAtBD;;AAwBA,QAAMsB,WAAW,GAAIC,QAAD,IAAc;AAC9B,QAAI9B,YAAY,CAAC+B,OAAb,KAAyB,CAA7B,EAAgC;AAC5BD,MAAAA,QAAQ;AACX;AACJ,GAJD;;AAMA,QAAME,MAAM,GAAG,MAAOJ,IAAP,IAAgB;AAC3B,UAAMK,MAAM,GAAG,MAAMvC,GAAG,CAACwC,IAAJ,CAAS,oBAAT,EAA+BN,IAA/B,CAArB;;AACA,QAAIK,MAAM,CAACT,IAAP,CAAYC,MAAZ,KAAuB,IAA3B,EAAiC;AAC7BU,MAAAA,KAAK,CAACF,MAAM,CAACT,IAAP,CAAYY,OAAb,CAAL;AACH,KAFD,MAGK;AACDD,MAAAA,KAAK,CAACF,MAAM,CAACT,IAAP,CAAYY,OAAb,CAAL;AACH;;AACD3C,IAAAA,OAAO,CAAC4C,IAAR,CAAa,wBAAb;AACH,GATD;;AAWA,QAAMC,MAAM,GAAG,MAAOC,EAAP,IAAc;AACzB;AACA,UAAMN,MAAM,GAAG,MAAMvC,GAAG,CAAC8C,MAAJ,CAAY,yBAAwBD,EAAG,EAAvC,CAArB;;AAEA,QAAIN,MAAM,CAACT,IAAP,CAAYC,MAAhB,EAAwB;AACpB,YAAMgB,QAAQ,GAAGvC,eAAe,CAACwC,MAAhB,CAAuBd,IAAI,IAAIA,IAAI,CAACe,GAAL,KAAaJ,EAA5C,CAAjB;AAAiE;AACjEpC,MAAAA,iBAAiB,CAACsC,QAAD,CAAjB;AACH,KAHD,MAIK;AACDN,MAAAA,KAAK,CAACF,MAAM,CAACT,IAAP,CAAYY,OAAb,CAAL;AACH;;AACDQ,IAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;AAEH,GAbD;;AAeA,QAAMO,MAAM,GAAG,MAAOlB,IAAP,IAAgB,CAC3B;AACA;AACA;AACA;AACA;AACA;AAEH,GARD;;AAUA3C,EAAAA,KAAK,CAAC8D,SAAN,CAAgB,MAAM;AAClBlB,IAAAA,WAAW,CAACR,mBAAD,CAAX;AAEArB,IAAAA,YAAY,CAAC+B,OAAb,GAAuB,CAAvB;AAEA,WAAO,MAAM;AACT/B,MAAAA,YAAY,CAAC+B,OAAb,GAAuB,CAAvB;AACH,KAFD;AAGH,GARD,EAQG,CAAC/B,YAAD,CARH;AAUA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAA,gCACI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,wBAAlB;AAAA,iCACI,QAAC,QAAD;AAAU,YAAA,eAAe,EAAEE,eAA3B;AAA4C,YAAA,MAAM,EAAEoC,MAApD,CACA;AACA;;AAFA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,4BAAlB;AACI,UAAA,MAAM,EAAGU,KAAD,iBAAW,QAAC,IAAD,OAAUA,KAAV;AACf,YAAA,SAAS,EAAE3C,SADI;AAEf,YAAA,KAAK,EAAEE,KAFQ;AAGf,YAAA,MAAM,EAAEyB;AAHO;AAAA;AAAA;AAAA;AAAA;AADvB;AAAA;AAAA;AAAA;AAAA,gBARJ,eAeI,QAAC,KAAD;AACI,UAAA,IAAI,EAAC,6BADT;AAEI,UAAA,MAAM,EAAGgB,KAAD,iBACJ,QAAC,QAAD,OACQA,KADR;AAEI,YAAA,MAAM,EAAEF;AAFZ;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCH;;GA9HQ/C,e;;KAAAA,e;AAgIT,eAAeA,eAAf","sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\r\n\r\nimport { history } from '../AdminOnly';\r\n\r\nimport api from '../../role_api';\r\nimport DanhSach from './DanhSach';\r\nimport Them from './Them';\r\nimport ChinhSua from './ChinhSua';\r\nimport Navbar from './Navbar';\r\n\r\nfunction VaiTroTaiNguyen() {\r\n    const isMountedVal = React.useRef(1);\r\n\r\n    const [roles_resources, setRolesResources] = React.useState([]);\r\n    const [resources, setResources] = React.useState([])\r\n    const [roles, setRoles] = React.useState([])\r\n\r\n    const get_role_name = (arr, checkRoleID) => {\r\n        const role = arr.find(({ role_id }) => role_id === checkRoleID);\r\n        return role.role_name;\r\n    }\r\n\r\n    const get_resource_name = (arr, checkResourceID) => {\r\n        const resource = arr.find(({ resource_id }) => resource_id === checkResourceID);\r\n        return resource.resource_name;\r\n    }\r\n\r\n    const get_roles_resources = async () => {\r\n        const response = await axios.get('/api/get-all-roles-resources');\r\n        if (response.data.status === true) {\r\n\r\n            const roles_resources = response.data.data;\r\n            const roles = response.data.roles;\r\n            const resources = response.data.resources;\r\n\r\n            const newdata = roles_resources.map(item => {\r\n                item.role_name = get_role_name(roles, item.role_id);\r\n                item.resource_name = get_resource_name(resources, item.resource_id);\r\n\r\n                return item;\r\n            });\r\n            setRolesResources(newdata)\r\n            setResources([...resources])\r\n            setRoles([...roles]);\r\n            // console.log(result.data.data)\r\n            // setRolesResources([...result.data.data]);\r\n            // setUsers([...result.data.users]);\r\n            // setRoles([...result.data.roles]);\r\n        }\r\n    }\r\n\r\n    const updateState = (callback) => {\r\n        if (isMountedVal.current === 1) {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    const create = async (item) => {\r\n        const result = await api.post('/add-role-resource', item);\r\n        if (result.data.status === true) {\r\n            alert(result.data.message)\r\n        }\r\n        else {\r\n            alert(result.data.message);\r\n        }\r\n        history.push('/admin/roles-resources')\r\n    }\r\n\r\n    const remove = async (id) => {\r\n        // axios delete\r\n        const result = await api.delete(`/delete-role-resource/${id}`);\r\n\r\n        if (result.data.status) {\r\n            const new_data = roles_resources.filter(item => item._id !== id);;\r\n            setRolesResources(new_data);\r\n        }\r\n        else {\r\n            alert(result.data.message)\r\n        }\r\n        console.log(id)\r\n\r\n    }\r\n\r\n    const update = async (item) => {\r\n        // const response = {}; //lấy dữ liệu trả về sau khi edit\r\n        // const { mauser } = response.data;;\r\n        // const new_data = users_roles.map((item) => {\r\n        //     return item.mauser !== mauser ? item : { ...response.data }\r\n        // })\r\n        // setUsersRoles(new_data);\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        updateState(get_roles_resources);\r\n\r\n        isMountedVal.current = 0;\r\n\r\n        return () => {\r\n            isMountedVal.current = 0;\r\n        }\r\n    }, [isMountedVal])\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Navbar />\r\n                <Switch>\r\n                    <Route exact path=\"/admin/roles-resources\">\r\n                        <DanhSach roles_resources={roles_resources} remove={remove}\r\n                        // resources={setResources}\r\n                        // roles={setRoles}\r\n                        />\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/admin/add-roles-resources\"\r\n                        render={(props) => <Them {...props}\r\n                            resources={resources}\r\n                            roles={roles}\r\n                            create={create}\r\n                        />} />\r\n\r\n                    <Route\r\n                        path=\"/admin/edit-roles-resources\"\r\n                        render={(props) => (\r\n                            <ChinhSua\r\n                                {...props}\r\n                                update={update}\r\n                            />\r\n                        )}\r\n                    />\r\n\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VaiTroTaiNguyen\r\n"]},"metadata":{},"sourceType":"module"}