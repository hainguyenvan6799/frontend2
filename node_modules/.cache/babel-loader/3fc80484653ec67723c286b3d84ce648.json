{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects_User\\\\lucky\\\\full_project\\\\frontend\\\\src\\\\components\\\\page\\\\Admin\\\\ThamGiaPhongChat.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { ChatEngine } from \"react-chat-engine\";\nimport { chat_projectid, giaimadulieu, private_key_chatroom } from \"../security\";\nimport { ChatEngineWrapper, getOrCreateChat } from \"react-chat-engine\";\nimport RenderChatList from \"./ChatList\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatListExample = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const email_encoded = localStorage.getItem(\"email\");\n  const password_encoded = localStorage.getItem(\"password\");\n  const email_decoded = giaimadulieu(email_encoded);\n  const password_decoded = giaimadulieu(password_encoded);\n\n  function createDirectChat(creds) {\n    getOrCreateChat(creds, {\n      is_direct_chat: true,\n      usernames: [username]\n    }, () => setUsername(\"\"));\n  }\n\n  function renderChatForm(creds) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => createDirectChat(creds),\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChatEngineWrapper, {\n    children: /*#__PURE__*/_jsxDEV(ChatEngine, {\n      height: \"100vh\" // projectID={chatConfig[\"Project-ID\"]}\n      // userName={chatConfig[\"User-Name\"]}\n      // userSecret={chatConfig[\"User-Secret\"]}\n      ,\n      projectID: chat_projectid,\n      userName: email_decoded,\n      userSecret: password_decoded,\n      renderNewChatForm: creds => renderChatForm(creds)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatListExample, \"oX7frOsoM286qXdKn03TWCpXkD4=\");\n\n_c = ChatListExample;\nexport default ChatListExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatListExample\");","map":{"version":3,"sources":["C:/Projects_User/lucky/full_project/frontend/src/components/page/Admin/ThamGiaPhongChat.js"],"names":["React","ChatEngine","chat_projectid","giaimadulieu","private_key_chatroom","ChatEngineWrapper","getOrCreateChat","RenderChatList","useState","ChatListExample","username","setUsername","email_encoded","localStorage","getItem","password_encoded","email_decoded","password_decoded","createDirectChat","creds","is_direct_chat","usernames","renderChatForm","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,SACEC,cADF,EAEEC,YAFF,EAGEC,oBAHF,QAIO,aAJP;AAMA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,mBAAnD;AACA,OAAOC,cAAP,MAA2B,YAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMI,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAtB;AACA,QAAMC,gBAAgB,GAAGF,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAzB;AAEA,QAAME,aAAa,GAAGb,YAAY,CAACS,aAAD,CAAlC;AACA,QAAMK,gBAAgB,GAAGd,YAAY,CAACY,gBAAD,CAArC;;AAEA,WAASG,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/Bb,IAAAA,eAAe,CACba,KADa,EAEb;AAAEC,MAAAA,cAAc,EAAE,IAAlB;AAAwBC,MAAAA,SAAS,EAAE,CAACX,QAAD;AAAnC,KAFa,EAGb,MAAMC,WAAW,CAAC,EAAD,CAHJ,CAAf;AAKD;;AAED,WAASW,cAAT,CAAwBH,KAAxB,EAA+B;AAC7B,wBACE;AAAA,8BACE;AACE,QAAA,WAAW,EAAC,UADd;AAEE,QAAA,KAAK,EAAET,QAFT;AAGE,QAAA,QAAQ,EAAGa,CAAD,IAAOZ,WAAW,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV;AAH9B;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAQ,QAAA,OAAO,EAAE,MAAMP,gBAAgB,CAACC,KAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAED,sBACE,QAAC,iBAAD;AAAA,2BACE,QAAC,UAAD;AACE,MAAA,MAAM,EAAC,OADT,CAEE;AACA;AACA;AAJF;AAKE,MAAA,SAAS,EAAEjB,cALb;AAME,MAAA,QAAQ,EAAEc,aANZ;AAOE,MAAA,UAAU,EAAEC,gBAPd;AAQE,MAAA,iBAAiB,EAAGE,KAAD,IAAWG,cAAc,CAACH,KAAD;AAR9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3CD;;GAAMV,e;;KAAAA,e;AA6CN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\r\nimport { ChatEngine } from \"react-chat-engine\";\r\n\r\nimport {\r\n  chat_projectid,\r\n  giaimadulieu,\r\n  private_key_chatroom,\r\n} from \"../security\";\r\n\r\nimport { ChatEngineWrapper, getOrCreateChat } from \"react-chat-engine\";\r\nimport RenderChatList from \"./ChatList\";\r\nimport { useState } from \"react\";\r\n\r\nconst ChatListExample = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const email_encoded = localStorage.getItem(\"email\");\r\n  const password_encoded = localStorage.getItem(\"password\");\r\n\r\n  const email_decoded = giaimadulieu(email_encoded);\r\n  const password_decoded = giaimadulieu(password_encoded);\r\n\r\n  function createDirectChat(creds) {\r\n    getOrCreateChat(\r\n      creds,\r\n      { is_direct_chat: true, usernames: [username] },\r\n      () => setUsername(\"\")\r\n    );\r\n  }\r\n\r\n  function renderChatForm(creds) {\r\n    return (\r\n      <div>\r\n        <input\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <button onClick={() => createDirectChat(creds)}>Create</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ChatEngineWrapper>\r\n      <ChatEngine\r\n        height=\"100vh\"\r\n        // projectID={chatConfig[\"Project-ID\"]}\r\n        // userName={chatConfig[\"User-Name\"]}\r\n        // userSecret={chatConfig[\"User-Secret\"]}\r\n        projectID={chat_projectid}\r\n        userName={email_decoded}\r\n        userSecret={password_decoded}\r\n        renderNewChatForm={(creds) => renderChatForm(creds)}\r\n      />\r\n    </ChatEngineWrapper>\r\n  );\r\n};\r\n\r\nexport default ChatListExample;\r\n"]},"metadata":{},"sourceType":"module"}