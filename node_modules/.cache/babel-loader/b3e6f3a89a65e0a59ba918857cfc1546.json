{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects_User\\\\lucky\\\\full_project\\\\frontend\\\\src\\\\components\\\\page\\\\User\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useContext, useState } from 'react';\nimport { Link, Redirect, useHistory } from 'react-router-dom'; // require('dotenv').config()\n// thư viện để mã hóa\n\nimport { mahoadulieu_postform, giaimadulieu } from '../security';\nimport { check_validate_email, check_validate_password } from '../../conditions/general_conditions'; // import State store\n\nimport { loadingContext, userContext, validationContext } from '../../../Store'; // import basic component\n\nimport Footer from '../../basic_components/Footer';\nimport Header from '../../basic_components/Header'; // import addictional components:\n\nimport ClipLoader from \"react-spinners/ClipLoader\"; // import cookies\n\nimport Cookies from 'universal-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cookies = new Cookies();\n\nconst CryptoJS = require(\"crypto-js\");\n\nrequire('dotenv').config();\n\nfunction LoginForm() {\n  _s();\n\n  // import history to redirect to another page\n  const history = useHistory();\n  const [details, setDetails] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\"); // declare state from store\n\n  const [user, setUser] = useContext(userContext);\n  const [general_validation, setGeneralValidation] = React.useContext(validationContext);\n  const [loading, setLoading] = useContext(loadingContext); // destructuring object to easy get value\n\n  const {\n    validation_email,\n    validation_password\n  } = general_validation;\n  const {\n    name,\n    email\n  } = user;\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (check_before_submit(details)) {\n      setGeneralValidation({ ...setGeneralValidation,\n        validation_email: \"\",\n        validation_password: \"\"\n      });\n      setLoading(true);\n      Login({\n        email: mahoadulieu_postform(details.email),\n        password: mahoadulieu_postform(details.password)\n      });\n    }\n  };\n\n  const Login = userinfo => {\n    axios.post(\"/api/login\", userinfo).then(res => {\n      console.log(res);\n      const {\n        status\n      } = res.data;\n\n      if (status === \"failure\") {\n        setError(\"Email hoac password khong dung.\");\n      } else if (status === \"success\") {\n        const {\n          name,\n          email,\n          is_updated_info,\n          mauser,\n          sex,\n          group,\n          malop\n        } = giaimadulieu(res.data.user);\n        const token = 'Bearer ' + res.data.token;\n        console.log(giaimadulieu(res.data.user));\n        console.log(giaimadulieu(res.data.magiaovien));\n        setUser({ ...user,\n          name: name,\n          email: email,\n          is_updated_info,\n          mauser,\n          sex,\n          group,\n          malop,\n          magiaovien: giaimadulieu(res.data.magiaovien)\n        });\n        setGeneralValidation({ ...general_validation,\n          validation_email: {\n            status: null,\n            message: \"\"\n          },\n          validation_password: {\n            status: null,\n            message: \"\"\n          }\n        });\n        localStorage.setItem('token', token); // lưu lại thông tin đăng nhập được mã hóa: sử dụng cho việc thông tin để vào phòng chat\n        // var encoded_email = CryptoJS.AES.encrypt(details.email, process.env.REACT_APP_Chatroom_API).toString();\n        // var encoded_password = CryptoJS.AES.encrypt(details.password, process.env.REACT_APP_Chatroom_API).toString();\n\n        const encoded_email = mahoadulieu_postform(details.email);\n        const encoded_password = mahoadulieu_postform(details.password);\n        localStorage.setItem('email', encoded_email);\n        localStorage.setItem('password', encoded_password); // console.log(is_updated_info);\n\n        if (is_updated_info === 1) {\n          // console.log(user);\n          history.push('/');\n        } else if (is_updated_info === 0) {\n          // console.log(user);\n          history.push('/trang_cap_nhat_thong_tin');\n        }\n      } else {\n        alert(res.data.message);\n      }\n\n      setLoading(false);\n    }).catch(error => console.log(error));\n  };\n\n  const show_validation = field => {\n    const {\n      status,\n      message\n    } = field;\n    return status === null ? \"\" : status ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-success text-left\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger text-left\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this);\n  };\n\n  const show_errors = error => {\n    return error !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger text-center\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this) : null;\n  };\n\n  const check_before_submit = ({\n    email,\n    password\n  }) => {\n    const result1 = check_validate_email(email);\n    const result2 = check_validate_password(password);\n    setGeneralValidation({ ...general_validation,\n      validation_email: {\n        status: result1.status,\n        message: result1.message\n      },\n      validation_password: {\n        status: result2.status,\n        message: result2.message\n      }\n    });\n\n    if (result1.status && result2.status) {\n      return true;\n    }\n  };\n\n  const handleChange = e => {\n    setDetails({ ...details,\n      [e.target.name]: e.target.value\n    });\n  }; // thành phần giao diện\n\n\n  const main_content = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"page\",\n      className: \"container-fluid mt-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"page-content\",\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"region-main-box\",\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            id: \"region-main\",\n            className: \"col-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notifications\",\n              id: \"user-notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              role: \"main\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"maincontent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"my-1 my-sm-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 76\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row justify-content-center\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-xl-6 col-sm-8 \",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-block\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                        className: \"card-header text-center\",\n                        children: \"H\\u1EC7 Th\\u1ED1ng Li\\xEAn L\\u1EA1c Tr\\u1EF1c Tuy\\u1EBFn - IUH\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"card-body\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"row justify-content-md-center\",\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"col-md-8\",\n                            children: /*#__PURE__*/_jsxDEV(\"form\", {\n                              className: \"mt-3\",\n                              onSubmit: submitHandler,\n                              children: [show_errors(error), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"form-group\",\n                                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                  htmlFor: \"email\",\n                                  className: \"sr-only\",\n                                  children: \"T\\xEAn t\\xE0i kho\\u1EA3n\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 203,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                  type: \"text\",\n                                  name: \"email\",\n                                  id: \"email\",\n                                  className: \"form-control\",\n                                  placeholder: \"T\\xEAn t\\xE0i kho\\u1EA3n\",\n                                  autoComplete: \"email\" // onChange={event => setDetails({ ...details, email: event.target.value })} value={email}\n                                  ,\n                                  onChange: handleChange\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 204,\n                                  columnNumber: 69\n                                }, this), show_validation(validation_email)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 202,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"form-group\",\n                                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                  htmlFor: \"password\",\n                                  className: \"sr-only\",\n                                  children: \"M\\u1EADt kh\\u1EA9u\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 217,\n                                  columnNumber: 69\n                                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                                  type: \"password\",\n                                  name: \"password\",\n                                  id: \"password\",\n                                  className: \"form-control\",\n                                  placeholder: \"M\\u1EADt kh\\u1EA9u\",\n                                  autoComplete: \"current-password\",\n                                  onChange: handleChange // onChange={event => setDetails({ ...details, password: event.target.value })} value={password} \n\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 218,\n                                  columnNumber: 69\n                                }, this), show_validation(validation_password)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 216,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                                type: \"submit\",\n                                className: \"btn btn-primary btn-block mt-3\",\n                                id: \"loginbtn\",\n                                children: \"\\u0110\\u0103ng nh\\u1EADp\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 231,\n                                columnNumber: 65\n                              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                                className: \"forgot-password text-center\",\n                                children: /*#__PURE__*/_jsxDEV(Link, {\n                                  to: \"/forgot_password\",\n                                  children: \"Forgot Password\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 233,\n                                  columnNumber: 69\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 232,\n                                columnNumber: 65\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 197,\n                              columnNumber: 61\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 196,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 195,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this);\n  }; // kết thúc thành phần giao diện\n\n\n  const form_login = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this), main_content(), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n      size: 100,\n      color: \"green\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 25\n    }, this) : name === \"\" && email === \"\" ? form_login() : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/trang_cap_nhat_thong_tin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 116\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginForm, \"m3FESQpsnNzhiUiLV3N9SulJIt0=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Projects_User/lucky/full_project/frontend/src/components/page/User/LoginForm.js"],"names":["axios","React","useContext","useState","Link","Redirect","useHistory","mahoadulieu_postform","giaimadulieu","check_validate_email","check_validate_password","loadingContext","userContext","validationContext","Footer","Header","ClipLoader","Cookies","cookies","CryptoJS","require","config","LoginForm","history","details","setDetails","email","password","error","setError","user","setUser","general_validation","setGeneralValidation","loading","setLoading","validation_email","validation_password","name","submitHandler","event","preventDefault","check_before_submit","Login","userinfo","post","then","res","console","log","status","data","is_updated_info","mauser","sex","group","malop","token","magiaovien","message","localStorage","setItem","encoded_email","encoded_password","push","alert","catch","show_validation","field","show_errors","result1","result2","handleChange","e","target","value","main_content","form_login"],"mappings":"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","sourcesContent":["\r\nimport axios from 'axios';\r\nimport React, { useContext, useState } from 'react'\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\n// require('dotenv').config()\r\n\r\n// thư viện để mã hóa\r\nimport {mahoadulieu_postform, giaimadulieu} from '../security';\r\nimport { check_validate_email, check_validate_password } from '../../conditions/general_conditions';\r\n\r\n\r\n\r\n// import State store\r\nimport { loadingContext, userContext, validationContext } from '../../../Store';\r\n\r\n// import basic component\r\nimport Footer from '../../basic_components/Footer';\r\nimport Header from '../../basic_components/Header';\r\n\r\n// import addictional components:\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\n// import cookies\r\nimport Cookies from 'universal-cookie';\r\nconst cookies = new Cookies();\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\nrequire('dotenv').config()\r\n\r\nfunction LoginForm() {\r\n    // import history to redirect to another page\r\n    const history = useHistory();\r\n\r\n    const [details, setDetails] = useState({ email: \"\", password: \"\" });\r\n    const [error, setError] = useState(\"\");\r\n\r\n    // declare state from store\r\n    const [user, setUser] = useContext(userContext);\r\n    const [general_validation, setGeneralValidation] = React.useContext(validationContext);\r\n    const [loading, setLoading] = useContext(loadingContext);\r\n\r\n    // destructuring object to easy get value\r\n    const { validation_email, validation_password } = general_validation;\r\n    const { name, email } = user;\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault();\r\n        if (check_before_submit(details)) {\r\n            setGeneralValidation({\r\n                ...setGeneralValidation,\r\n                validation_email: \"\",\r\n                validation_password: \"\",\r\n            })\r\n            setLoading(true)\r\n            Login({\r\n                email: mahoadulieu_postform(details.email),\r\n                password: mahoadulieu_postform(details.password)\r\n            });\r\n        }\r\n    }\r\n\r\n    const Login = (userinfo) => {\r\n        axios.post(\"/api/login\", userinfo)\r\n            .then(res => {\r\n                console.log(res)\r\n                const { status } = res.data;\r\n                if (status === \"failure\") {\r\n                    setError(\"Email hoac password khong dung.\");\r\n                }\r\n                else if (status === \"success\") {\r\n                    const { name, email, is_updated_info, mauser, sex, group, malop } = giaimadulieu(res.data.user);\r\n                    const token = 'Bearer ' + res.data.token;\r\n\r\n                    console.log(giaimadulieu(res.data.user))\r\n                    console.log(giaimadulieu(res.data.magiaovien))\r\n\r\n                    setUser({ ...user, \r\n                                name: name,\r\n                                email: email,\r\n                                is_updated_info, \r\n                                mauser,\r\n                                sex, \r\n                                group,\r\n                                malop,\r\n                                magiaovien: giaimadulieu(res.data.magiaovien),\r\n                             });\r\n                    setGeneralValidation({\r\n                        ...general_validation,\r\n                        validation_email: {\r\n                            status: null,\r\n                            message: \"\",\r\n                        },\r\n                        validation_password: {\r\n                            status: null,\r\n                            message: \"\",\r\n                        }\r\n                    })\r\n                    localStorage.setItem('token', token)\r\n\r\n                    // lưu lại thông tin đăng nhập được mã hóa: sử dụng cho việc thông tin để vào phòng chat\r\n\r\n                    // var encoded_email = CryptoJS.AES.encrypt(details.email, process.env.REACT_APP_Chatroom_API).toString();\r\n                    // var encoded_password = CryptoJS.AES.encrypt(details.password, process.env.REACT_APP_Chatroom_API).toString();\r\n                    const encoded_email = mahoadulieu_postform(details.email);\r\n                    const encoded_password = mahoadulieu_postform(details.password)\r\n\r\n                    localStorage.setItem('email', encoded_email)\r\n                    localStorage.setItem('password', encoded_password)\r\n\r\n                    // console.log(is_updated_info);\r\n\r\n                    if (is_updated_info === 1) {\r\n                        // console.log(user);\r\n                        history.push('/');\r\n                    }\r\n                    else if (is_updated_info === 0) {\r\n                        // console.log(user);\r\n                        history.push('/trang_cap_nhat_thong_tin');\r\n                    }\r\n                }\r\n                else {\r\n                    alert(res.data.message);\r\n                }\r\n                setLoading(false);\r\n            })\r\n            .catch(error => console.log(error))\r\n    };\r\n\r\n    const show_validation = (field) => {\r\n        const { status, message } = field;\r\n        return (\r\n            status === null ? \"\" : status ? (\r\n                <p className=\"text-success text-left\">{message}</p>\r\n            ) : (\r\n                <p className=\"text-danger text-left\">{message}</p>\r\n            )\r\n        )\r\n    }\r\n\r\n    const show_errors = (error) => {\r\n        return (\r\n            error !== \"\" ? (\r\n                <div className=\"alert alert-danger\">\r\n                    <p className=\"text-danger text-center\">{error}</p>\r\n                </div>\r\n            ) : null\r\n        )\r\n    }\r\n\r\n    const check_before_submit = ({ email, password }) => {\r\n        const result1 = check_validate_email(email);\r\n        const result2 = check_validate_password(password);\r\n\r\n        setGeneralValidation({\r\n            ...general_validation,\r\n            validation_email: {\r\n                status: result1.status,\r\n                message: result1.message,\r\n            },\r\n            validation_password: {\r\n                status: result2.status,\r\n                message: result2.message,\r\n            },\r\n        });\r\n\r\n        if (result1.status && result2.status) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const handleChange = e => {\r\n        setDetails({\r\n            ...details,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    // thành phần giao diện\r\n    const main_content = () => {\r\n        return (\r\n            <div id=\"page\" className=\"container-fluid mt-0\">\r\n                <div id=\"page-content\" className=\"row\">\r\n                    <div id=\"region-main-box\" className=\"col-12\">\r\n                        <section id=\"region-main\" className=\"col-12\">\r\n                            <span className=\"notifications\" id=\"user-notifications\"></span>\r\n                            <div role=\"main\"><span id=\"maincontent\"></span><div className=\"my-1 my-sm-5\"></div>\r\n                                <div className=\"row justify-content-center\">\r\n                                    <div className=\"col-xl-6 col-sm-8 \">\r\n                                        <div className=\"card\">\r\n                                            <div className=\"card-block\">\r\n                                                <h2 className=\"card-header text-center\">Hệ Thống Liên Lạc Trực Tuyến - IUH</h2>\r\n                                                <div className=\"card-body\">\r\n\r\n\r\n                                                    <div className=\"row justify-content-md-center\">\r\n                                                        <div className=\"col-md-8\">\r\n                                                            <form className=\"mt-3\" onSubmit={submitHandler}>\r\n                                                                {/* ERROR */}\r\n                                                                {show_errors(error)}\r\n\r\n                                                                {/* ERROR */}\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label htmlFor=\"email\" className=\"sr-only\">Tên tài khoản</label>\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        name=\"email\"\r\n                                                                        id=\"email\"\r\n                                                                        className=\"form-control\"\r\n                                                                        placeholder=\"Tên tài khoản\"\r\n                                                                        autoComplete=\"email\"\r\n                                                                        // onChange={event => setDetails({ ...details, email: event.target.value })} value={email}\r\n                                                                        onChange={handleChange}\r\n                                                                    />\r\n                                                                    {show_validation(validation_email)}\r\n                                                                </div>\r\n                                                                <div className=\"form-group\">\r\n                                                                    <label htmlFor=\"password\" className=\"sr-only\">Mật khẩu</label>\r\n                                                                    <input\r\n                                                                        type=\"password\"\r\n                                                                        name=\"password\"\r\n                                                                        id=\"password\"\r\n                                                                        className=\"form-control\"\r\n                                                                        placeholder=\"Mật khẩu\"\r\n                                                                        autoComplete=\"current-password\"\r\n                                                                        onChange={handleChange}\r\n                                                                    // onChange={event => setDetails({ ...details, password: event.target.value })} value={password} \r\n                                                                    />\r\n                                                                    {show_validation(validation_password)}\r\n                                                                </div>\r\n\r\n                                                                <button type=\"submit\" className=\"btn btn-primary btn-block mt-3\" id=\"loginbtn\">Đăng nhập</button>\r\n                                                                <p className=\"forgot-password text-center\">\r\n                                                                    <Link to=\"/forgot_password\">Forgot Password</Link>\r\n                                                                </p>\r\n                                                            </form>\r\n                                                        </div>\r\n\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div></div>\r\n\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    // kết thúc thành phần giao diện\r\n\r\n    const form_login = () => {\r\n        return (\r\n            <div>\r\n\r\n                <Header />\r\n                {main_content()}\r\n                <Footer />\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { loading ? <ClipLoader size={100} color={\"green\"} /> : (name === \"\" && email === \"\") ? form_login() : <Redirect to=\"/trang_cap_nhat_thong_tin\" />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n"]},"metadata":{},"sourceType":"module"}