{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects_User\\\\lucky\\\\full_project\\\\frontend\\\\src\\\\components\\\\page\\\\Admin\\\\context\\\\ChatContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { createContext } from 'react';\nimport { deleteChat, getMessages, leaveChat, newChat } from 'react-chat-engine';\nimport { chat_projectid, giaimadulieu // private_key_chatroom,\n} from \"../security\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatContext = /*#__PURE__*/createContext();\nexport const ChatProvider = ({\n  children,\n  authUser\n}) => {\n  _s();\n\n  const email_encoded = localStorage.getItem(\"email\");\n  const password_encoded = localStorage.getItem(\"password\");\n  const email_decoded = giaimadulieu(email_encoded);\n  const password_decoded = giaimadulieu(password_encoded);\n  const [myChats, setMyChats] = useState();\n  const [chatConfig, setChatConfig] = useState();\n  const [selectedChat, setSelectedChat] = useState();\n\n  const createChatClick = () => {\n    newChat(chatConfig, {\n      title: ''\n    });\n  };\n\n  const deleteChatClick = chat => {\n    const isAdmin = chat.admin === chatConfig.userName;\n\n    if (isAdmin && window.confirm('Are you sure you want to delete this chat?')) {\n      deleteChat(chatConfig, chat.id);\n    } else if (window.confirm('Are you sure you want to leave this chat?')) {\n      leaveChat(chatConfig, chat.id, chatConfig.userName);\n    }\n  };\n\n  const selectChatClick = chat => {\n    getMessages(chatConfig, chat.id, messages => {\n      setSelectedChat({ ...chat,\n        messages\n      });\n    });\n  };\n\n  React.useEffect(() => {\n    if (authUser) {\n      setChatConfig({\n        projectID: chat_projectid,\n        userName: email_decoded,\n        userSecret: password_decoded\n      });\n    }\n  }, [authUser]);\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      myChats,\n      setMyChats,\n      chatConfig,\n      setChatConfig,\n      selectedChat,\n      setSelectedChat,\n      createChatClick,\n      deleteChatClick,\n      selectChatClick\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatProvider, \"JGNPaDS5TEn+G18Xg85PM/82XYM=\");\n\n_c = ChatProvider;\nexport const useChat = () => {\n  _s2();\n\n  const {\n    myChats,\n    setMyChats,\n    chatConfig,\n    setChatConfig,\n    selectedChat,\n    setSelectedChat,\n    createChatClick,\n    deleteChatClick,\n    selectChatClick\n  } = useContext(ChatContext);\n  return {\n    myChats,\n    setMyChats,\n    chatConfig,\n    setChatConfig,\n    selectedChat,\n    setSelectedChat,\n    createChatClick,\n    deleteChatClick,\n    selectChatClick\n  };\n};\n\n_s2(useChat, \"58flFr2DzNODU6BU2ZvA9pOVELQ=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"sources":["C:/Projects_User/lucky/full_project/frontend/src/components/page/Admin/context/ChatContext.jsx"],"names":["useContext","createContext","deleteChat","getMessages","leaveChat","newChat","chat_projectid","giaimadulieu","ChatContext","ChatProvider","children","authUser","email_encoded","localStorage","getItem","password_encoded","email_decoded","password_decoded","myChats","setMyChats","useState","chatConfig","setChatConfig","selectedChat","setSelectedChat","createChatClick","title","deleteChatClick","chat","isAdmin","admin","userName","window","confirm","id","selectChatClick","messages","React","useEffect","projectID","userSecret","useChat"],"mappings":"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","sourcesContent":["import { useContext } from 'react';\r\nimport { createContext } from 'react';\r\nimport { deleteChat, getMessages, leaveChat, newChat } from 'react-chat-engine'\r\nimport {\r\n    chat_projectid,\r\n    giaimadulieu,\r\n    // private_key_chatroom,\r\n} from \"../security\";\r\n\r\nexport const ChatContext = createContext();\r\n\r\nexport const ChatProvider = ({ children, authUser }) => {\r\n    const email_encoded = localStorage.getItem(\"email\");\r\n    const password_encoded = localStorage.getItem(\"password\");\r\n\r\n    const email_decoded = giaimadulieu(email_encoded);\r\n    const password_decoded = giaimadulieu(password_encoded);\r\n\r\n    const [myChats, setMyChats] = useState();\r\n    const [chatConfig, setChatConfig] = useState();\r\n    const [selectedChat, setSelectedChat] = useState();\r\n\r\n    const createChatClick = () => {\r\n        newChat(chatConfig, { title: '' });\r\n    };\r\n\r\n    const deleteChatClick = chat => {\r\n        const isAdmin = chat.admin === chatConfig.userName;\r\n\r\n        if (\r\n            isAdmin &&\r\n            window.confirm('Are you sure you want to delete this chat?')\r\n        ) {\r\n            deleteChat(chatConfig, chat.id);\r\n        } else if (window.confirm('Are you sure you want to leave this chat?')) {\r\n            leaveChat(chatConfig, chat.id, chatConfig.userName);\r\n        }\r\n    };\r\n\r\n    const selectChatClick = chat => {\r\n        getMessages(chatConfig, chat.id, messages => {\r\n            setSelectedChat({\r\n                ...chat,\r\n                messages,\r\n            });\r\n        });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (authUser) {\r\n            setChatConfig({\r\n                projectID: chat_projectid,\r\n                userName: email_decoded,\r\n                userSecret: password_decoded,\r\n            })\r\n        }\r\n    }, [authUser])\r\n\r\n    return (\r\n        <ChatContext.Provider value={{\r\n            myChats,\r\n            setMyChats,\r\n            chatConfig,\r\n            setChatConfig,\r\n            selectedChat,\r\n            setSelectedChat,\r\n            createChatClick,\r\n            deleteChatClick,\r\n            selectChatClick,\r\n        }}>\r\n            {children}\r\n        </ChatContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useChat = () => {\r\n    const {\r\n        myChats,\r\n        setMyChats,\r\n        chatConfig,\r\n        setChatConfig,\r\n        selectedChat,\r\n        setSelectedChat,\r\n        createChatClick,\r\n        deleteChatClick,\r\n        selectChatClick,\r\n    } = useContext(ChatContext);\r\n\r\n    return {\r\n        myChats,\r\n        setMyChats,\r\n        chatConfig,\r\n        setChatConfig,\r\n        selectedChat,\r\n        setSelectedChat,\r\n        createChatClick,\r\n        deleteChatClick,\r\n        selectChatClick,\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}