{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects_User\\\\lucky\\\\full_project\\\\frontend\\\\src\\\\components\\\\page\\\\User\\\\ChangePasswordAfterLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router'; //import basic components\n\nimport Header from '../../basic_components/Header';\nimport Footer from '../../basic_components/Footer'; // import addictional components\n\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { private_key_chatroom } from '../security'; // import Context\n\nimport { loadingContext, userContext } from '../../../Store'; // import form:\n\nimport { change_password_after_login_form } from '../../basic_components/allform/FormManagement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChangePasswordAfterLogin() {\n  _s();\n\n  // declare history to redirect to another page\n  const history = useHistory(); // declare context\n\n  const [user, setUser] = useContext(userContext);\n  const [loading, setLoading] = useContext(loadingContext);\n  const initialValues = {\n    \"old_password\": \"\",\n    \"password\": \"\",\n    \"confirm_password\": \"\"\n  };\n\n  const onSubmit = values => {\n    const data = {\n      request_from_user: \"change-password-after-login\",\n      ...values,\n      email: user.email\n    };\n    axios.post('/api/change_password', data).then(response => {\n      const {\n        status\n      } = response.data;\n\n      if (status === \"Success\") {\n        var config = {\n          method: 'patch',\n          url: `https://api.chatengine.io/users/${user.user_chat_id}/`,\n          headers: {\n            'PRIVATE-KEY': private_key_chatroom\n          },\n          data: {\n            secret: values.password\n          }\n        };\n        axios(config).then(res => {\n          alert(\"Đổi mật khẩu thành công.\");\n          localStorage.clear();\n          history.push('/signin');\n        }).catch(err => console.log(err));\n      }\n    }).catch(error => console.log(error));\n  };\n\n  const validationSchema = Yup.object({\n    old_password: Yup.string().required(\"Password can not be empty\").matches(/^[a-zA-Z0-9]{6,20}$/g, 'Password có thể là chữ thường hoặc in hoa hoặc số và có độ dài ít nhất 6 ký tự, nhiều nhất là 10 ký tự.'),\n    password: Yup.string().required(\"Password can not be empty\").matches(/^[a-zA-Z0-9]{6,20}$/g, 'Password có thể là chữ thường hoặc in hoa hoặc số và có độ dài ít nhất 6 ký tự, nhiều nhất là 10 ký tự.'),\n    confirm_password: Yup.string().oneOf([Yup.ref('password'), null], 'Trường này phải có giá trị giống với New Password')\n  });\n\n  const main_content = () => {\n    return change_password_after_login_form(initialValues, onSubmit, validationSchema);\n  };\n\n  const full_page = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), main_content(), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  };\n\n  return loading ? /*#__PURE__*/_jsxDEV(ClipLoader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 19\n  }, this) : user.name !== \"\" ? full_page() : /*#__PURE__*/_jsxDEV(ClipLoader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 68\n  }, this);\n}\n\n_s(ChangePasswordAfterLogin, \"m1X3cqf03PsKJgl2Eng0B3Uo78k=\", false, function () {\n  return [useHistory];\n});\n\n_c = ChangePasswordAfterLogin;\nexport default ChangePasswordAfterLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePasswordAfterLogin\");","map":{"version":3,"sources":["C:/Projects_User/lucky/full_project/frontend/src/components/page/User/ChangePasswordAfterLogin.js"],"names":["React","useContext","useHistory","Header","Footer","Yup","axios","ClipLoader","private_key_chatroom","loadingContext","userContext","change_password_after_login_form","ChangePasswordAfterLogin","history","user","setUser","loading","setLoading","initialValues","onSubmit","values","data","request_from_user","email","post","then","response","status","config","method","url","user_chat_id","headers","secret","password","res","alert","localStorage","clear","push","catch","err","console","log","error","validationSchema","object","old_password","string","required","matches","confirm_password","oneOf","ref","main_content","full_page","name"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\n//import basic components\r\nimport Header from '../../basic_components/Header';\r\nimport Footer from '../../basic_components/Footer';\r\n\r\n// import addictional components\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { private_key_chatroom } from '../security'\r\n\r\n\r\n// import Context\r\nimport { loadingContext, userContext } from '../../../Store';\r\n\r\n// import form:\r\nimport { change_password_after_login_form } from '../../basic_components/allform/FormManagement';\r\n\r\nfunction ChangePasswordAfterLogin() {\r\n    // declare history to redirect to another page\r\n    const history = useHistory();\r\n\r\n    // declare context\r\n    const [ user, setUser ] = useContext(userContext)\r\n    const [ loading, setLoading ] = useContext(loadingContext)\r\n\r\n    const initialValues = {\r\n        \"old_password\": \"\",\r\n        \"password\": \"\",\r\n        \"confirm_password\": \"\",\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        const data = {\r\n            request_from_user: \"change-password-after-login\",\r\n            ...values,\r\n            email: user.email,\r\n        }\r\n        axios.post('/api/change_password', data)\r\n            .then(\r\n                response => {\r\n                    const { status } = response.data;\r\n                    if(status === \"Success\")\r\n                    {\r\n                        var config = {\r\n                            method: 'patch',\r\n                            url: `https://api.chatengine.io/users/${user.user_chat_id}/`,\r\n                            headers: {\r\n                                'PRIVATE-KEY': private_key_chatroom,\r\n                            },\r\n                            data: {\r\n                                secret: values.password\r\n                            }\r\n                        }\r\n                        axios(config).then(res => {\r\n                            alert(\"Đổi mật khẩu thành công.\");\r\n                            localStorage.clear();\r\n                            history.push('/signin');\r\n                        }).catch(err => console.log(err))\r\n                        \r\n                    }\r\n                }\r\n            )\r\n            .catch(\r\n                error => console.log(error)\r\n            )\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        old_password: Yup\r\n            .string()\r\n            .required(\"Password can not be empty\")\r\n            .matches(/^[a-zA-Z0-9]{6,20}$/g, 'Password có thể là chữ thường hoặc in hoa hoặc số và có độ dài ít nhất 6 ký tự, nhiều nhất là 10 ký tự.'),\r\n        password: Yup\r\n            .string()\r\n            .required(\"Password can not be empty\")\r\n            .matches(/^[a-zA-Z0-9]{6,20}$/g, 'Password có thể là chữ thường hoặc in hoa hoặc số và có độ dài ít nhất 6 ký tự, nhiều nhất là 10 ký tự.'),\r\n        confirm_password: Yup\r\n            .string()\r\n            .oneOf([Yup.ref('password'), null], 'Trường này phải có giá trị giống với New Password'),\r\n\r\n    })\r\n\r\n    const main_content = () => {\r\n        return (change_password_after_login_form(initialValues, onSubmit, validationSchema));\r\n    }\r\n\r\n    const full_page = () => {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                {main_content()}\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        loading ? <ClipLoader/> : user.name !== \"\" ? full_page() : <ClipLoader/>\r\n    )\r\n}\r\n\r\nexport default ChangePasswordAfterLogin\r\n"]},"metadata":{},"sourceType":"module"}